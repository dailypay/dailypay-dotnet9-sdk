//------------------------------------------------------------------------------
// <auto-generated>
// This code was generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
//
// Changes to this file may cause incorrect behavior and will be lost when
// the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
#nullable enable
namespace DailyPay.Models.Requests
{
    using DailyPay.Models.Requests;
    using DailyPay.Utils;
    
    public class AuthorizationCodeFlow
    {

        /// <summary>
        /// The OAuth2 grant type
        /// </summary>
        [SpeakeasyMetadata("form:name=grant_type")]
        public GrantType GrantType { get; set; } = default!;

        /// <summary>
        /// An authorization code received through user authorization flow
        /// </summary>
        [SpeakeasyMetadata("form:name=code")]
        public string Code { get; set; } = default!;

        /// <summary>
        /// The url redirected to after the authorization flow was completed by current user.
        /// </summary>
        [SpeakeasyMetadata("form:name=redirect_uri")]
        public string RedirectUri { get; set; } = default!;

        /// <summary>
        /// A value used by the client to maintain state between the request and callback. This is used to prevent CSRF attacks.  See https://www.rfc-editor.org/rfc/rfc6749#section-10.12 for more detail.
        /// </summary>
        [SpeakeasyMetadata("form:name=state")]
        public string State { get; set; } = default!;

        /// <summary>
        /// A PKCE verifier matching the challenge submitted during the authorization code request.
        /// </summary>
        [SpeakeasyMetadata("form:name=code_verifier")]
        public string? CodeVerifier { get; set; }

        /// <summary>
        /// The client id of the application requesting the token.
        /// </summary>
        [SpeakeasyMetadata("form:name=client_id")]
        public string ClientId { get; set; } = default!;

        /// <summary>
        /// The client secret of the application requesting the token, if available.
        /// </summary>
        [SpeakeasyMetadata("form:name=client_secret")]
        public string? ClientSecret { get; set; }
    }
}