//------------------------------------------------------------------------------
// <auto-generated>
// This code was generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
//
// Changes to this file may cause incorrect behavior and will be lost when
// the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
#nullable enable
namespace DailyPay.Models.Components
{
    using DailyPay.Models.Components;
    using DailyPay.Utils;
    using Newtonsoft.Json;
    
    /// <summary>
    /// An account with type `CARD` and subtype `GALILEO`, `WISELY`, or `DEBIT`.
    /// </summary>
    public class CardOutput
    {

        /// <summary>
        /// A code that indicates the status of an account that is a destination for funds.
        /// </summary>
        [JsonProperty("verification_status")]
        public AccountAttributesCardVerificationStatus VerificationStatus { get; set; } = default!;

        [JsonProperty("balances")]
        public AccountAttributesCardAccountBalances AccountBalances { get; set; } = default!;

        [JsonProperty("capabilities")]
        public AccountAttributesCardAccountCapabilities AccountCapabilities { get; set; } = default!;

        /// <summary>
        /// Display name for this account.
        /// </summary>
        [JsonProperty("name")]
        public string Name { get; set; } = default!;

        /// <summary>
        /// The type of account. It differentiates between depository accounts (e.g. bank account), cards (e.g. debit) and earnings balance type of accounts (e.g. on demand pay).
        /// </summary>
        [JsonProperty("account_type")]
        public string AccountType { get; } = "CARD";

        /// <summary>
        /// The subtype of the account.
        /// </summary>
        [JsonProperty("subtype")]
        public AccountAttributesCardSubtype Subtype { get; set; } = default!;

        /// <summary>
        /// The banking details of the account and account holder.
        /// </summary>
        [JsonProperty("details")]
        public DetailsOutput Details { get; set; } = default!;
    }
}