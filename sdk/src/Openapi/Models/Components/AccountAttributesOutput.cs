//------------------------------------------------------------------------------
// <auto-generated>
// This code was generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
//
// Changes to this file may cause incorrect behavior and will be lost when
// the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
#nullable enable
namespace Openapi.Models.Components
{
    using Newtonsoft.Json;
    using Newtonsoft.Json.Linq;
    using Openapi.Models.Components;
    using Openapi.Utils;
    using System;
    using System.Collections.Generic;
    using System.Numerics;
    using System.Reflection;
    

    public class AccountAttributesOutputType
    {
        private AccountAttributesOutputType(string value) { Value = value; }

        public string Value { get; private set; }
        public static AccountAttributesOutputType CardOutput { get { return new AccountAttributesOutputType("Card_output"); } }
        
        public static AccountAttributesOutputType EarningsBalanceReadOnly { get { return new AccountAttributesOutputType("Earnings Balance (read only)"); } }
        
        public static AccountAttributesOutputType Depository { get { return new AccountAttributesOutputType("Depository"); } }
        
        public static AccountAttributesOutputType Null { get { return new AccountAttributesOutputType("null"); } }

        public override string ToString() { return Value; }
        public static implicit operator String(AccountAttributesOutputType v) { return v.Value; }
        public static AccountAttributesOutputType FromString(string v) {
            switch(v) {
                case "Card_output": return CardOutput;
                case "Earnings Balance (read only)": return EarningsBalanceReadOnly;
                case "Depository": return Depository;
                case "null": return Null;
                default: throw new ArgumentException("Invalid value for AccountAttributesOutputType");
            }
        }
        public override bool Equals(object? obj)
        {
            if (obj == null || GetType() != obj.GetType())
            {
                return false;
            }
            return Value.Equals(((AccountAttributesOutputType)obj).Value);
        }

        public override int GetHashCode()
        {
            return Value.GetHashCode();
        }
    }


    /// <summary>
    /// The details of the account.
    /// </summary>
    [JsonConverter(typeof(AccountAttributesOutput.AccountAttributesOutputConverter))]
    public class AccountAttributesOutput {
        public AccountAttributesOutput(AccountAttributesOutputType type) {
            Type = type;
        }

        [SpeakeasyMetadata("form:explode=true")]
        public CardOutput? CardOutput { get; set; }

        [SpeakeasyMetadata("form:explode=true")]
        public EarningsBalanceReadOnly? EarningsBalanceReadOnly { get; set; }

        [SpeakeasyMetadata("form:explode=true")]
        public Depository? Depository { get; set; }

        public AccountAttributesOutputType Type { get; set; }


        public static AccountAttributesOutput CreateCardOutput(CardOutput cardOutput) {
            AccountAttributesOutputType typ = AccountAttributesOutputType.CardOutput;

            AccountAttributesOutput res = new AccountAttributesOutput(typ);
            res.CardOutput = cardOutput;
            return res;
        }

        public static AccountAttributesOutput CreateEarningsBalanceReadOnly(EarningsBalanceReadOnly earningsBalanceReadOnly) {
            AccountAttributesOutputType typ = AccountAttributesOutputType.EarningsBalanceReadOnly;

            AccountAttributesOutput res = new AccountAttributesOutput(typ);
            res.EarningsBalanceReadOnly = earningsBalanceReadOnly;
            return res;
        }

        public static AccountAttributesOutput CreateDepository(Depository depository) {
            AccountAttributesOutputType typ = AccountAttributesOutputType.Depository;

            AccountAttributesOutput res = new AccountAttributesOutput(typ);
            res.Depository = depository;
            return res;
        }

        public static AccountAttributesOutput CreateNull() {
            AccountAttributesOutputType typ = AccountAttributesOutputType.Null;
            return new AccountAttributesOutput(typ);
        }

        public class AccountAttributesOutputConverter : JsonConverter
        {

            public override bool CanConvert(System.Type objectType) => objectType == typeof(AccountAttributesOutput);

            public override bool CanRead => true;

            public override object? ReadJson(JsonReader reader, System.Type objectType, object? existingValue, JsonSerializer serializer)
            {
                var json = JRaw.Create(reader).ToString();
                if (json == "null")
                {
                    return null;
                }

                var fallbackCandidates = new List<(System.Type, object, string)>();

                try
                {
                    return new AccountAttributesOutput(AccountAttributesOutputType.CardOutput)
                    {
                        CardOutput = ResponseBodyDeserializer.DeserializeUndiscriminatedUnionMember<CardOutput>(json)
                    };
                }
                catch (ResponseBodyDeserializer.MissingMemberException)
                {
                    fallbackCandidates.Add((typeof(CardOutput), new AccountAttributesOutput(AccountAttributesOutputType.CardOutput), "CardOutput"));
                }
                catch (ResponseBodyDeserializer.DeserializationException)
                {
                    // try next option
                }
                catch (Exception)
                {
                    throw;
                }

                try
                {
                    return new AccountAttributesOutput(AccountAttributesOutputType.EarningsBalanceReadOnly)
                    {
                        EarningsBalanceReadOnly = ResponseBodyDeserializer.DeserializeUndiscriminatedUnionMember<EarningsBalanceReadOnly>(json)
                    };
                }
                catch (ResponseBodyDeserializer.MissingMemberException)
                {
                    fallbackCandidates.Add((typeof(EarningsBalanceReadOnly), new AccountAttributesOutput(AccountAttributesOutputType.EarningsBalanceReadOnly), "EarningsBalanceReadOnly"));
                }
                catch (ResponseBodyDeserializer.DeserializationException)
                {
                    // try next option
                }
                catch (Exception)
                {
                    throw;
                }

                try
                {
                    return new AccountAttributesOutput(AccountAttributesOutputType.Depository)
                    {
                        Depository = ResponseBodyDeserializer.DeserializeUndiscriminatedUnionMember<Depository>(json)
                    };
                }
                catch (ResponseBodyDeserializer.MissingMemberException)
                {
                    fallbackCandidates.Add((typeof(Depository), new AccountAttributesOutput(AccountAttributesOutputType.Depository), "Depository"));
                }
                catch (ResponseBodyDeserializer.DeserializationException)
                {
                    // try next option
                }
                catch (Exception)
                {
                    throw;
                }

                if (fallbackCandidates.Count > 0)
                {
                    fallbackCandidates.Sort((a, b) => ResponseBodyDeserializer.CompareFallbackCandidates(a.Item1, b.Item1, json));
                    foreach(var (deserializationType, returnObject, propertyName) in fallbackCandidates)
                    {
                        try
                        {
                            return ResponseBodyDeserializer.DeserializeUndiscriminatedUnionFallback(deserializationType, returnObject, propertyName, json);
                        }
                        catch (ResponseBodyDeserializer.DeserializationException)
                        {
                            // try next fallback option
                        }
                        catch (Exception)
                        {
                            throw;
                        }
                    }
                }

                throw new InvalidOperationException("Could not deserialize into any supported types.");
            }

            public override void WriteJson(JsonWriter writer, object? value, JsonSerializer serializer)
            {
                if (value == null) {
                    writer.WriteRawValue("null");
                    return;
                }
                AccountAttributesOutput res = (AccountAttributesOutput)value;
                if (AccountAttributesOutputType.FromString(res.Type).Equals(AccountAttributesOutputType.Null))
                {
                    writer.WriteRawValue("null");
                    return;
                }
                if (res.CardOutput != null)
                {
                    writer.WriteRawValue(Utilities.SerializeJSON(res.CardOutput));
                    return;
                }
                if (res.EarningsBalanceReadOnly != null)
                {
                    writer.WriteRawValue(Utilities.SerializeJSON(res.EarningsBalanceReadOnly));
                    return;
                }
                if (res.Depository != null)
                {
                    writer.WriteRawValue(Utilities.SerializeJSON(res.Depository));
                    return;
                }

            }

        }

    }
}