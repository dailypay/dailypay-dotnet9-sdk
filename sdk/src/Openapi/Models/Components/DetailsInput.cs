//------------------------------------------------------------------------------
// <auto-generated>
// This code was generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
//
// Changes to this file may cause incorrect behavior and will be lost when
// the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
#nullable enable
namespace Openapi.Models.Components
{
    using Newtonsoft.Json;
    using Newtonsoft.Json.Linq;
    using Openapi.Models.Components;
    using Openapi.Utils;
    using System;
    using System.Collections.Generic;
    using System.Numerics;
    using System.Reflection;
    

    public class DetailsInputType
    {
        private DetailsInputType(string value) { Value = value; }

        public string Value { get; private set; }
        public static DetailsInputType AccountDebitCardInput { get { return new DetailsInputType("Account_DebitCard_input"); } }
        
        public static DetailsInputType AccountGalileoCardInput { get { return new DetailsInputType("Account_GalileoCard_input"); } }
        
        public static DetailsInputType AccountWiselyCard { get { return new DetailsInputType("Account_WiselyCard"); } }
        
        public static DetailsInputType Null { get { return new DetailsInputType("null"); } }

        public override string ToString() { return Value; }
        public static implicit operator String(DetailsInputType v) { return v.Value; }
        public static DetailsInputType FromString(string v) {
            switch(v) {
                case "Account_DebitCard_input": return AccountDebitCardInput;
                case "Account_GalileoCard_input": return AccountGalileoCardInput;
                case "Account_WiselyCard": return AccountWiselyCard;
                case "null": return Null;
                default: throw new ArgumentException("Invalid value for DetailsInputType");
            }
        }
        public override bool Equals(object? obj)
        {
            if (obj == null || GetType() != obj.GetType())
            {
                return false;
            }
            return Value.Equals(((DetailsInputType)obj).Value);
        }

        public override int GetHashCode()
        {
            return Value.GetHashCode();
        }
    }


    /// <summary>
    /// The banking details of the account and account holder.
    /// </summary>
    [JsonConverter(typeof(DetailsInput.DetailsInputConverter))]
    public class DetailsInput {
        public DetailsInput(DetailsInputType type) {
            Type = type;
        }

        [SpeakeasyMetadata("form:explode=true")]
        public AccountDebitCardInput? AccountDebitCardInput { get; set; }

        [SpeakeasyMetadata("form:explode=true")]
        public AccountGalileoCardInput? AccountGalileoCardInput { get; set; }

        [SpeakeasyMetadata("form:explode=true")]
        public AccountWiselyCard? AccountWiselyCard { get; set; }

        public DetailsInputType Type { get; set; }


        public static DetailsInput CreateAccountDebitCardInput(AccountDebitCardInput accountDebitCardInput) {
            DetailsInputType typ = DetailsInputType.AccountDebitCardInput;

            DetailsInput res = new DetailsInput(typ);
            res.AccountDebitCardInput = accountDebitCardInput;
            return res;
        }

        public static DetailsInput CreateAccountGalileoCardInput(AccountGalileoCardInput accountGalileoCardInput) {
            DetailsInputType typ = DetailsInputType.AccountGalileoCardInput;

            DetailsInput res = new DetailsInput(typ);
            res.AccountGalileoCardInput = accountGalileoCardInput;
            return res;
        }

        public static DetailsInput CreateAccountWiselyCard(AccountWiselyCard accountWiselyCard) {
            DetailsInputType typ = DetailsInputType.AccountWiselyCard;

            DetailsInput res = new DetailsInput(typ);
            res.AccountWiselyCard = accountWiselyCard;
            return res;
        }

        public static DetailsInput CreateNull() {
            DetailsInputType typ = DetailsInputType.Null;
            return new DetailsInput(typ);
        }

        public class DetailsInputConverter : JsonConverter
        {

            public override bool CanConvert(System.Type objectType) => objectType == typeof(DetailsInput);

            public override bool CanRead => true;

            public override object? ReadJson(JsonReader reader, System.Type objectType, object? existingValue, JsonSerializer serializer)
            {
                var json = JRaw.Create(reader).ToString();
                if (json == "null")
                {
                    return null;
                }

                var fallbackCandidates = new List<(System.Type, object, string)>();

                try
                {
                    return new DetailsInput(DetailsInputType.AccountGalileoCardInput)
                    {
                        AccountGalileoCardInput = ResponseBodyDeserializer.DeserializeUndiscriminatedUnionMember<AccountGalileoCardInput>(json)
                    };
                }
                catch (ResponseBodyDeserializer.MissingMemberException)
                {
                    fallbackCandidates.Add((typeof(AccountGalileoCardInput), new DetailsInput(DetailsInputType.AccountGalileoCardInput), "AccountGalileoCardInput"));
                }
                catch (ResponseBodyDeserializer.DeserializationException)
                {
                    // try next option
                }
                catch (Exception)
                {
                    throw;
                }

                try
                {
                    return new DetailsInput(DetailsInputType.AccountDebitCardInput)
                    {
                        AccountDebitCardInput = ResponseBodyDeserializer.DeserializeUndiscriminatedUnionMember<AccountDebitCardInput>(json)
                    };
                }
                catch (ResponseBodyDeserializer.MissingMemberException)
                {
                    fallbackCandidates.Add((typeof(AccountDebitCardInput), new DetailsInput(DetailsInputType.AccountDebitCardInput), "AccountDebitCardInput"));
                }
                catch (ResponseBodyDeserializer.DeserializationException)
                {
                    // try next option
                }
                catch (Exception)
                {
                    throw;
                }

                try
                {
                    return new DetailsInput(DetailsInputType.AccountWiselyCard)
                    {
                        AccountWiselyCard = ResponseBodyDeserializer.DeserializeUndiscriminatedUnionMember<AccountWiselyCard>(json)
                    };
                }
                catch (ResponseBodyDeserializer.MissingMemberException)
                {
                    fallbackCandidates.Add((typeof(AccountWiselyCard), new DetailsInput(DetailsInputType.AccountWiselyCard), "AccountWiselyCard"));
                }
                catch (ResponseBodyDeserializer.DeserializationException)
                {
                    // try next option
                }
                catch (Exception)
                {
                    throw;
                }

                if (fallbackCandidates.Count > 0)
                {
                    fallbackCandidates.Sort((a, b) => ResponseBodyDeserializer.CompareFallbackCandidates(a.Item1, b.Item1, json));
                    foreach(var (deserializationType, returnObject, propertyName) in fallbackCandidates)
                    {
                        try
                        {
                            return ResponseBodyDeserializer.DeserializeUndiscriminatedUnionFallback(deserializationType, returnObject, propertyName, json);
                        }
                        catch (ResponseBodyDeserializer.DeserializationException)
                        {
                            // try next fallback option
                        }
                        catch (Exception)
                        {
                            throw;
                        }
                    }
                }

                throw new InvalidOperationException("Could not deserialize into any supported types.");
            }

            public override void WriteJson(JsonWriter writer, object? value, JsonSerializer serializer)
            {
                if (value == null) {
                    writer.WriteRawValue("null");
                    return;
                }
                DetailsInput res = (DetailsInput)value;
                if (DetailsInputType.FromString(res.Type).Equals(DetailsInputType.Null))
                {
                    writer.WriteRawValue("null");
                    return;
                }
                if (res.AccountDebitCardInput != null)
                {
                    writer.WriteRawValue(Utilities.SerializeJSON(res.AccountDebitCardInput));
                    return;
                }
                if (res.AccountGalileoCardInput != null)
                {
                    writer.WriteRawValue(Utilities.SerializeJSON(res.AccountGalileoCardInput));
                    return;
                }
                if (res.AccountWiselyCard != null)
                {
                    writer.WriteRawValue(Utilities.SerializeJSON(res.AccountWiselyCard));
                    return;
                }

            }

        }

    }
}