//------------------------------------------------------------------------------
// <auto-generated>
// This code was generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
//
// Changes to this file may cause incorrect behavior and will be lost when
// the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
#nullable enable
namespace Openapi.Models.Requests
{
    using Newtonsoft.Json;
    using Newtonsoft.Json.Linq;
    using Openapi.Models.Requests;
    using Openapi.Utils;
    using System;
    using System.Collections.Generic;
    using System.Numerics;
    using System.Reflection;
    

    public class RequestTokenRequestType
    {
        private RequestTokenRequestType(string value) { Value = value; }

        public string Value { get; private set; }
        public static RequestTokenRequestType AuthorizationCodeFlow { get { return new RequestTokenRequestType("Authorization code flow"); } }
        
        public static RequestTokenRequestType ClientCredentialsFlow { get { return new RequestTokenRequestType("Client credentials flow"); } }
        
        public static RequestTokenRequestType RefreshToken { get { return new RequestTokenRequestType("Refresh token"); } }
        
        public static RequestTokenRequestType Null { get { return new RequestTokenRequestType("null"); } }

        public override string ToString() { return Value; }
        public static implicit operator String(RequestTokenRequestType v) { return v.Value; }
        public static RequestTokenRequestType FromString(string v) {
            switch(v) {
                case "Authorization code flow": return AuthorizationCodeFlow;
                case "Client credentials flow": return ClientCredentialsFlow;
                case "Refresh token": return RefreshToken;
                case "null": return Null;
                default: throw new ArgumentException("Invalid value for RequestTokenRequestType");
            }
        }
        public override bool Equals(object? obj)
        {
            if (obj == null || GetType() != obj.GetType())
            {
                return false;
            }
            return Value.Equals(((RequestTokenRequestType)obj).Value);
        }

        public override int GetHashCode()
        {
            return Value.GetHashCode();
        }
    }


    [JsonConverter(typeof(RequestTokenRequest.RequestTokenRequestConverter))]
    public class RequestTokenRequest {
        public RequestTokenRequest(RequestTokenRequestType type) {
            Type = type;
        }

        [SpeakeasyMetadata("form:explode=true")]
        public AuthorizationCodeFlow? AuthorizationCodeFlow { get; set; }

        [SpeakeasyMetadata("form:explode=true")]
        public ClientCredentialsFlow? ClientCredentialsFlow { get; set; }

        [SpeakeasyMetadata("form:explode=true")]
        public RefreshToken? RefreshToken { get; set; }

        public RequestTokenRequestType Type { get; set; }


        public static RequestTokenRequest CreateAuthorizationCodeFlow(AuthorizationCodeFlow authorizationCodeFlow) {
            RequestTokenRequestType typ = RequestTokenRequestType.AuthorizationCodeFlow;

            RequestTokenRequest res = new RequestTokenRequest(typ);
            res.AuthorizationCodeFlow = authorizationCodeFlow;
            return res;
        }

        public static RequestTokenRequest CreateClientCredentialsFlow(ClientCredentialsFlow clientCredentialsFlow) {
            RequestTokenRequestType typ = RequestTokenRequestType.ClientCredentialsFlow;

            RequestTokenRequest res = new RequestTokenRequest(typ);
            res.ClientCredentialsFlow = clientCredentialsFlow;
            return res;
        }

        public static RequestTokenRequest CreateRefreshToken(RefreshToken refreshToken) {
            RequestTokenRequestType typ = RequestTokenRequestType.RefreshToken;

            RequestTokenRequest res = new RequestTokenRequest(typ);
            res.RefreshToken = refreshToken;
            return res;
        }

        public static RequestTokenRequest CreateNull() {
            RequestTokenRequestType typ = RequestTokenRequestType.Null;
            return new RequestTokenRequest(typ);
        }

        public class RequestTokenRequestConverter : JsonConverter
        {

            public override bool CanConvert(System.Type objectType) => objectType == typeof(RequestTokenRequest);

            public override bool CanRead => true;

            public override object? ReadJson(JsonReader reader, System.Type objectType, object? existingValue, JsonSerializer serializer)
            {
                var json = JRaw.Create(reader).ToString();
                if (json == "null")
                {
                    return null;
                }

                var fallbackCandidates = new List<(System.Type, object, string)>();

                try
                {
                    return new RequestTokenRequest(RequestTokenRequestType.ClientCredentialsFlow)
                    {
                        ClientCredentialsFlow = ResponseBodyDeserializer.DeserializeUndiscriminatedUnionMember<ClientCredentialsFlow>(json)
                    };
                }
                catch (ResponseBodyDeserializer.MissingMemberException)
                {
                    fallbackCandidates.Add((typeof(ClientCredentialsFlow), new RequestTokenRequest(RequestTokenRequestType.ClientCredentialsFlow), "ClientCredentialsFlow"));
                }
                catch (ResponseBodyDeserializer.DeserializationException)
                {
                    // try next option
                }
                catch (Exception)
                {
                    throw;
                }

                try
                {
                    return new RequestTokenRequest(RequestTokenRequestType.RefreshToken)
                    {
                        RefreshToken = ResponseBodyDeserializer.DeserializeUndiscriminatedUnionMember<RefreshToken>(json)
                    };
                }
                catch (ResponseBodyDeserializer.MissingMemberException)
                {
                    fallbackCandidates.Add((typeof(RefreshToken), new RequestTokenRequest(RequestTokenRequestType.RefreshToken), "RefreshToken"));
                }
                catch (ResponseBodyDeserializer.DeserializationException)
                {
                    // try next option
                }
                catch (Exception)
                {
                    throw;
                }

                try
                {
                    return new RequestTokenRequest(RequestTokenRequestType.AuthorizationCodeFlow)
                    {
                        AuthorizationCodeFlow = ResponseBodyDeserializer.DeserializeUndiscriminatedUnionMember<AuthorizationCodeFlow>(json)
                    };
                }
                catch (ResponseBodyDeserializer.MissingMemberException)
                {
                    fallbackCandidates.Add((typeof(AuthorizationCodeFlow), new RequestTokenRequest(RequestTokenRequestType.AuthorizationCodeFlow), "AuthorizationCodeFlow"));
                }
                catch (ResponseBodyDeserializer.DeserializationException)
                {
                    // try next option
                }
                catch (Exception)
                {
                    throw;
                }

                if (fallbackCandidates.Count > 0)
                {
                    fallbackCandidates.Sort((a, b) => ResponseBodyDeserializer.CompareFallbackCandidates(a.Item1, b.Item1, json));
                    foreach(var (deserializationType, returnObject, propertyName) in fallbackCandidates)
                    {
                        try
                        {
                            return ResponseBodyDeserializer.DeserializeUndiscriminatedUnionFallback(deserializationType, returnObject, propertyName, json);
                        }
                        catch (ResponseBodyDeserializer.DeserializationException)
                        {
                            // try next fallback option
                        }
                        catch (Exception)
                        {
                            throw;
                        }
                    }
                }

                throw new InvalidOperationException("Could not deserialize into any supported types.");
            }

            public override void WriteJson(JsonWriter writer, object? value, JsonSerializer serializer)
            {
                if (value == null) {
                    writer.WriteRawValue("null");
                    return;
                }
                RequestTokenRequest res = (RequestTokenRequest)value;
                if (RequestTokenRequestType.FromString(res.Type).Equals(RequestTokenRequestType.Null))
                {
                    writer.WriteRawValue("null");
                    return;
                }
                if (res.AuthorizationCodeFlow != null)
                {
                    writer.WriteRawValue(Utilities.SerializeJSON(res.AuthorizationCodeFlow));
                    return;
                }
                if (res.ClientCredentialsFlow != null)
                {
                    writer.WriteRawValue(Utilities.SerializeJSON(res.ClientCredentialsFlow));
                    return;
                }
                if (res.RefreshToken != null)
                {
                    writer.WriteRawValue(Utilities.SerializeJSON(res.RefreshToken));
                    return;
                }

            }

        }

    }
}