overlay: 1.0.0
info:
  title: CodeSamples overlay for csharp target
  version: 0.0.0
actions:
  - target: $["paths"]["/cards/generic"]["post"]
    update:
      x-codeSamples:
        - lang: csharp
          label: createGenericCardToken
          source: |-
            using DailyPay.SDK.DotNet9;
            using DailyPay.SDK.DotNet9.Models.Requests;

            var sdk = new SDK();

            CreateGenericCardTokenRequest req = new CreateGenericCardTokenRequest() {
                FirstName = "Edith",
                LastName = "Clarke",
                CardNumber = "4007589999999912",
                ExpirationYear = "2027",
                ExpirationMonth = "02",
                Cvv = "123",
                AddressLineOne = "123 Kebly Street",
                AddressLineTwo = "Unit C",
                AddressCity = "Fort Lee",
                AddressState = "NJ",
                AddressZipCode = "07237",
                AddressCountry = "US",
            };

            var res = await sdk.Cards.CreateAsync(req);

            // handle response
  - target: $["paths"]["/rest/accounts"]["get"]
    update:
      x-codeSamples:
        - lang: csharp
          label: listAccounts
          source: |-
            using DailyPay.SDK.DotNet9;
            using DailyPay.SDK.DotNet9.Models.Components;
            using DailyPay.SDK.DotNet9.Models.Requests;

            var sdk = new SDK(
                version: 3,
                security: new Security() {
                    OauthUserToken = "<YOUR_OAUTH_USER_TOKEN_HERE>",
                }
            );

            ListAccountsRequest req = new ListAccountsRequest() {
                FilterAccountType = FilterAccountType.EarningsBalance,
            };

            var res = await sdk.Accounts.ListAsync(req);

            // handle response
  - target: $["paths"]["/rest/accounts"]["post"]
    update:
      x-codeSamples:
        - lang: csharp
          label: createAccount
          source: |-
            using DailyPay.SDK.DotNet9;
            using DailyPay.SDK.DotNet9.Models.Components;
            using DailyPay.SDK.DotNet9.Models.Requests;

            var sdk = new SDK(
                version: 3,
                security: new Security() {
                    OauthUserToken = "<YOUR_OAUTH_USER_TOKEN_HERE>",
                }
            );

            CreateAccountRequest req = new CreateAccountRequest() {
                AccountData = new AccountDataInput() {
                    Data = new AccountResourceInput() {
                        Attributes = AccountAttributesInput.CreateDepositoryInput(
                            new DepositoryInput() {
                                Name = "Acme Bank Checking Account",
                                Subtype = AccountAttributesDepositorySubtype.Checking,
                                DepositoryAccountDetails = new DepositoryAccountDetails() {
                                    FirstName = "Edith",
                                    LastName = "Clarke",
                                    RoutingNumber = "XXXXX2021",
                                    AccountNumber = "XXXXXX4321",
                                },
                            }
                        ),
                        Relationships = new AccountRelationships() {
                            Person = new PersonRelationship() {
                                Data = new PersonIdentifier() {
                                    Id = "3fa8f641-5717-4562-b3fc-2c963f66afa6",
                                },
                            },
                        },
                    },
                },
            };

            var res = await sdk.Accounts.CreateAsync(req);

            // handle response
  - target: $["paths"]["/rest/accounts/{account_id}"]["get"]
    update:
      x-codeSamples:
        - lang: csharp
          label: readAccount
          source: |-
            using DailyPay.SDK.DotNet9;
            using DailyPay.SDK.DotNet9.Models.Components;
            using DailyPay.SDK.DotNet9.Models.Requests;

            var sdk = new SDK(
                version: 3,
                security: new Security() {
                    OauthUserToken = "<YOUR_OAUTH_USER_TOKEN_HERE>",
                }
            );

            ReadAccountRequest req = new ReadAccountRequest() {
                AccountId = "2bc7d781-3247-46f6-b60f-4090d214936a",
            };

            var res = await sdk.Accounts.ReadAsync(req);

            // handle response
  - target: $["paths"]["/rest/health"]["get"]
    update:
      x-codeSamples:
        - lang: csharp
          label: getHealth
          source: |-
            using DailyPay.SDK.DotNet9;
            using DailyPay.SDK.DotNet9.Models.Components;

            var sdk = new SDK(security: new Security() {
                OauthUserToken = "<YOUR_OAUTH_USER_TOKEN_HERE>",
            });

            var res = await sdk.Health.GetHealthAsync();

            // handle response
  - target: $["paths"]["/rest/jobs"]["get"]
    update:
      x-codeSamples:
        - lang: csharp
          label: listJobs
          source: |-
            using DailyPay.SDK.DotNet9;
            using DailyPay.SDK.DotNet9.Models.Components;
            using DailyPay.SDK.DotNet9.Models.Requests;

            var sdk = new SDK(
                version: 3,
                security: new Security() {
                    OauthUserToken = "<YOUR_OAUTH_USER_TOKEN_HERE>",
                }
            );

            ListJobsRequest req = new ListJobsRequest() {};

            var res = await sdk.Jobs.ListAsync(req);

            // handle response
  - target: $["paths"]["/rest/jobs/{job_id}"]["get"]
    update:
      x-codeSamples:
        - lang: csharp
          label: readJob
          source: |-
            using DailyPay.SDK.DotNet9;
            using DailyPay.SDK.DotNet9.Models.Components;
            using DailyPay.SDK.DotNet9.Models.Requests;

            var sdk = new SDK(
                version: 3,
                security: new Security() {
                    OauthUserToken = "<YOUR_OAUTH_USER_TOKEN_HERE>",
                }
            );

            ReadJobRequest req = new ReadJobRequest() {
                JobId = "aa860051-c411-4709-9685-c1b716df611b",
            };

            var res = await sdk.Jobs.ReadAsync(req);

            // handle response
  - target: $["paths"]["/rest/jobs/{job_id}"]["patch"]
    update:
      x-codeSamples:
        - lang: csharp
          label: updateJob
          source: |-
            using DailyPay.SDK.DotNet9;
            using DailyPay.SDK.DotNet9.Models.Components;
            using DailyPay.SDK.DotNet9.Models.Requests;

            var sdk = new SDK(
                version: 3,
                security: new Security() {
                    OauthUserToken = "<YOUR_OAUTH_USER_TOKEN_HERE>",
                }
            );

            UpdateJobRequest req = new UpdateJobRequest() {
                JobId = "e9d84b0d-92ba-43c9-93bf-7c993313fa6f",
                JobUpdateData = new JobUpdateData() {
                    Data = new Data() {
                        Id = "e9d84b0d-92ba-43c9-93bf-7c993313fa6f",
                        Attributes = new JobAttributesInput() {
                            ActivationStatus = ActivationStatus.Deactivated,
                        },
                        Relationships = new JobRelationshipsInput() {
                            DirectDepositDefaultDepository = new AccountRelationship() {
                                Data = new AccountIdentifier() {
                                    Id = "2bc7d781-3247-46f6-b60f-4090d214936a",
                                },
                            },
                            DirectDepositDefaultCard = new AccountRelationship() {
                                Data = new AccountIdentifier() {
                                    Id = "2bc7d781-3247-46f6-b60f-4090d214936a",
                                },
                            },
                        },
                    },
                },
            };

            var res = await sdk.Jobs.UpdateAsync(req);

            // handle response
  - target: $["paths"]["/rest/organizations"]["get"]
    update:
      x-codeSamples:
        - lang: csharp
          label: listOrganizations
          source: |-
            using DailyPay.SDK.DotNet9;
            using DailyPay.SDK.DotNet9.Models.Components;
            using DailyPay.SDK.DotNet9.Models.Requests;

            var sdk = new SDK(
                version: 3,
                security: new Security() {
                    OauthUserToken = "<YOUR_OAUTH_USER_TOKEN_HERE>",
                }
            );

            ListOrganizationsRequest req = new ListOrganizationsRequest() {};

            var res = await sdk.Organizations.ListAsync(req);

            // handle response
  - target: $["paths"]["/rest/organizations/{organization_id}"]["get"]
    update:
      x-codeSamples:
        - lang: csharp
          label: readOrganization
          source: |-
            using DailyPay.SDK.DotNet9;
            using DailyPay.SDK.DotNet9.Models.Components;
            using DailyPay.SDK.DotNet9.Models.Requests;

            var sdk = new SDK(
                version: 3,
                security: new Security() {
                    OauthUserToken = "<YOUR_OAUTH_USER_TOKEN_HERE>",
                }
            );

            ReadOrganizationRequest req = new ReadOrganizationRequest() {
                OrganizationId = "123e4567-e89b-12d3-a456-426614174000",
            };

            var res = await sdk.Organizations.ReadAsync(req);

            // handle response
  - target: $["paths"]["/rest/paychecks"]["get"]
    update:
      x-codeSamples:
        - lang: csharp
          label: listPaychecks
          source: |-
            using DailyPay.SDK.DotNet9;
            using DailyPay.SDK.DotNet9.Models.Components;
            using DailyPay.SDK.DotNet9.Models.Requests;
            using System;

            var sdk = new SDK(
                version: 3,
                security: new Security() {
                    OauthUserToken = "<YOUR_OAUTH_USER_TOKEN_HERE>",
                }
            );

            ListPaychecksRequest req = new ListPaychecksRequest() {
                FilterDepositExpectedAtGte = System.DateTime.Parse("2023-03-15T04:00:00Z"),
                FilterDepositExpectedAtLt = System.DateTime.Parse("2023-03-15T04:00:00Z"),
                FilterPayPeriodEndsAtGte = System.DateTime.Parse("2023-03-15T04:00:00Z"),
                FilterPayPeriodEndsAtLt = System.DateTime.Parse("2023-03-15T04:00:00Z"),
                FilterPayPeriodStartsAtGte = System.DateTime.Parse("2023-03-15T04:00:00Z"),
                FilterPayPeriodStartsAtLt = System.DateTime.Parse("2023-03-15T04:00:00Z"),
            };

            var res = await sdk.Paychecks.ListAsync(req);

            // handle response
  - target: $["paths"]["/rest/paychecks/{paycheck_id}"]["get"]
    update:
      x-codeSamples:
        - lang: csharp
          label: readPaycheck
          source: |-
            using DailyPay.SDK.DotNet9;
            using DailyPay.SDK.DotNet9.Models.Components;
            using DailyPay.SDK.DotNet9.Models.Requests;

            var sdk = new SDK(
                version: 3,
                security: new Security() {
                    OauthUserToken = "<YOUR_OAUTH_USER_TOKEN_HERE>",
                }
            );

            ReadPaycheckRequest req = new ReadPaycheckRequest() {
                PaycheckId = "3fa85f64-5717-4562-b3fc-2c963f66afa6",
            };

            var res = await sdk.Paychecks.ReadAsync(req);

            // handle response
  - target: $["paths"]["/rest/people/{person_id}"]["get"]
    update:
      x-codeSamples:
        - lang: csharp
          label: readPerson
          source: |-
            using DailyPay.SDK.DotNet9;
            using DailyPay.SDK.DotNet9.Models.Components;
            using DailyPay.SDK.DotNet9.Models.Requests;

            var sdk = new SDK(
                version: 3,
                security: new Security() {
                    OauthUserToken = "<YOUR_OAUTH_USER_TOKEN_HERE>",
                }
            );

            ReadPersonRequest req = new ReadPersonRequest() {
                PersonId = "aa860051-c411-4709-9685-c1b716df611b",
            };

            var res = await sdk.People.ReadAsync(req);

            // handle response
  - target: $["paths"]["/rest/people/{person_id}"]["patch"]
    update:
      x-codeSamples:
        - lang: csharp
          label: updatePerson
          source: |-
            using DailyPay.SDK.DotNet9;
            using DailyPay.SDK.DotNet9.Models.Components;
            using DailyPay.SDK.DotNet9.Models.Requests;

            var sdk = new SDK(
                version: 3,
                security: new Security() {
                    OauthUserToken = "<YOUR_OAUTH_USER_TOKEN_HERE>",
                }
            );

            UpdatePersonRequest req = new UpdatePersonRequest() {
                PersonId = "aa860051-c411-4709-9685-c1b716df611b",
                PersonData = new PersonDataInput() {
                    Data = new PersonResourceInput() {
                        Id = "aa860051-c411-4709-9685-c1b716df611b",
                        Attributes = new PersonAttributesInput() {
                            StateOfResidence = "NY",
                        },
                    },
                },
            };

            var res = await sdk.People.UpdateAsync(req);

            // handle response
  - target: $["paths"]["/rest/transfers"]["get"]
    update:
      x-codeSamples:
        - lang: csharp
          label: listTransfers
          source: |-
            using DailyPay.SDK.DotNet9;
            using DailyPay.SDK.DotNet9.Models.Components;
            using DailyPay.SDK.DotNet9.Models.Requests;

            var sdk = new SDK(
                version: 3,
                security: new Security() {
                    OauthUserToken = "<YOUR_OAUTH_USER_TOKEN_HERE>",
                }
            );

            ListTransfersRequest req = new ListTransfersRequest() {};

            var res = await sdk.Transfers.ListAsync(req);

            // handle response
  - target: $["paths"]["/rest/transfers"]["post"]
    update:
      x-codeSamples:
        - lang: csharp
          label: createTransfer
          source: |-
            using DailyPay.SDK.DotNet9;
            using DailyPay.SDK.DotNet9.Models.Components;
            using DailyPay.SDK.DotNet9.Models.Requests;

            var sdk = new SDK(
                version: 3,
                security: new Security() {
                    OauthUserToken = "<YOUR_OAUTH_USER_TOKEN_HERE>",
                }
            );

            CreateTransferRequest req = new CreateTransferRequest() {
                IdempotencyKey = "ea9f2225-403b-4e2c-93b0-0eda090ffa65",
                TransferCreateData = new TransferCreateData() {
                    Data = new TransferCreateResource() {
                        Id = "aba332a2-24a2-46de-8257-5040e71ab210",
                        Attributes = new TransferAttributesInput() {
                            Preview = true,
                            Amount = 2500,
                            Currency = "USD",
                            Schedule = TransferAttributesSchedule.WithinThirtyMinutes,
                        },
                        Relationships = new TransferCreateRelationships() {
                            Origin = new AccountRelationship() {
                                Data = new AccountIdentifier() {
                                    Id = "2bc7d781-3247-46f6-b60f-4090d214936a",
                                },
                            },
                            Destination = new AccountRelationship() {
                                Data = new AccountIdentifier() {
                                    Id = "2bc7d781-3247-46f6-b60f-4090d214936a",
                                },
                            },
                            Person = new PersonRelationship() {
                                Data = new PersonIdentifier() {
                                    Id = "3fa8f641-5717-4562-b3fc-2c963f66afa6",
                                },
                            },
                        },
                    },
                },
            };

            var res = await sdk.Transfers.CreateAsync(req);

            // handle response
  - target: $["paths"]["/rest/transfers/{transfer_id}"]["get"]
    update:
      x-codeSamples:
        - lang: csharp
          label: readTransfer
          source: |-
            using DailyPay.SDK.DotNet9;
            using DailyPay.SDK.DotNet9.Models.Components;
            using DailyPay.SDK.DotNet9.Models.Requests;

            var sdk = new SDK(
                version: 3,
                security: new Security() {
                    OauthUserToken = "<YOUR_OAUTH_USER_TOKEN_HERE>",
                }
            );

            ReadTransferRequest req = new ReadTransferRequest() {
                TransferId = "aba332a2-24a2-46de-8257-5040e71ab210",
            };

            var res = await sdk.Transfers.ReadAsync(req);

            // handle response
